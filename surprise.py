# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Oct  5 14:52:00 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))